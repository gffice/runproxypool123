# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18
    - name: pull
      run: |
        rm -r ./proxypool/
        git clone https://github.com/ssrlive/proxypool.git
    #- name: chmod
      #run: |
        #chmod 777 debug-github-actions.sh
    #- name: Start SSH via Ngrok
      #run: ./debug-github-actions.sh
      #env:
        # After sign up on the https://ngrok.com/
        # You can find this token here: https://dashboard.ngrok.com/get-started/setup
        #NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}

    - name: Build
      run: |
         cd ./proxypool
         go get
         go build

    #- name: Test
      #run: |
         #cd ./runproxypool
         #chmod 777 ./proxypool
         #./proxypool -c ./config/config.yaml
    #- name: Upload artifact # 上传构建产物，这里我们的源码目录是 src，而实际运行的代码是构建后的 bin 目录
      #uses: actions/upload-artifact@v2
      #with:
        #name: build_output
        #path: .
    - name: Commit change
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions"
        git pull origin master
        git add ./proxypool
        git commit -m "在$(date '+%Y-%m-%d %H:%M:%S')代码构建"
    - name: 上传
      uses:  ad-m/github-push-action@master
      with:
        branch: master
